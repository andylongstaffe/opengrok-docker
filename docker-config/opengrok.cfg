    # Use the built-in defaults. This section can be copied to its own
    # file and tailored to your local requirements. Then simply set
    # OPENGROK_CONFIGURATION=/path/to/your/configuration, before using
    # this wrapper. It will save you hand editing in your settings
    # on each new release. A sample cron(1M) entry might look like:
    # 15 0 * * * OPENGROK_CONFIGURATION=/pkgs/etc/OpenGrok.sh /pkgs/sbin/OpenGrok updateQuietly

    # Note: It is not really possible to ever provided defaults for
    # these values which will run in every UNIX-like environment.
    # So I have provided a set which are functional for a given
    # environment on which you can based you own configuration.

    # This has been updated to support more environment variables and
    # operating systems, if you have any reasonably generic
    # improvements please feel free to submit a patch.

OPENGROK_INSTANCE_BASE="${OPENGROK_INSTANCE_BASE:-/var/opengrok}"

    LOGGER_CONFIG_FILE="logging.properties"

    if [ -z "${OPENGROK_DISTRIBUTION_BASE}" ]
    then
        if [ -d "${SCRIPT_DIRECTORY}/dist" -a \
             -f "${SCRIPT_DIRECTORY}/dist/opengrok.jar" -a \
             -f "${SCRIPT_DIRECTORY}/dist/source.war" \
           ]
        then
            # Handle Developer Build Environments
            OPENGROK_DISTRIBUTION_BASE="${SCRIPT_DIRECTORY}/dist"
            LOGGER_CONF_SOURCE="${SCRIPT_DIRECTORY}/${LOGGER_CONFIG_FILE}"
        else
            # Handle Binary Distributions
            OPENGROK_DISTRIBUTION_BASE="${SCRIPT_DIRECTORY}/../lib"
            LOGGER_CONF_SOURCE="${OPENGROK_DISTRIBUTION_BASE}/../doc/"
            LOGGER_CONF_SOURCE="${LOGGER_CONF_SOURCE}${LOGGER_CONFIG_FILE}"
        fi
    fi

    # REQUIRED: Source Code/Repository Root
    #           (your source code or the root of all repositories)
    SRC_ROOT="/src"

    # REQUIRED: OpenGrok Generate Data Root
    #           (for Lucene index and hypertext cross-references)
    #           This area is rebuilt by "update" / "updateQuietly"
    DATA_ROOT="${OPENGROK_INSTANCE_BASE}/data"

    # OPTIONAL: User Provided Source Path to Description Mapping
    #         (Tab Separated Value)
    #           (The user maintained source of the generated EftarFile file)
    PATH_DESC="${OPENGROK_INSTANCE_BASE}/etc/paths.tsv"

    # REQUIRED: XML Configuration
    #           (the configuration used by Web/GUI interfaces)
    XML_CONFIGURATION="${OPENGROK_INSTANCE_BASE}/etc/configuration.xml"

    # OPTIONAL: read only XML config, if it exists, it will be read
    READ_XML_CONFIGURATION="${READ_XML_CONFIGURATION:-}"

    if [ -f "${READ_XML_CONFIGURATION}" ] ; then
        READ_XML_CONF="-R ${READ_XML_CONFIGURATION}"
    fi

    # REQUIRED: Logger Configuration
    if [ -n "${OPENGROK_LOGGER_CONFIG_PATH}" ]; then
        if [ ! -f "${OPENGROK_LOGGER_CONFIG_PATH}" ]; then
        echo "File ${OPENGROK_LOGGER_CONFIG_PATH} does not exist"
        exit 1
    fi
        LOGGER_CONFIG_PATH=${OPENGROK_LOGGER_CONFIG_PATH}
    else
        LOGGER_CONFIG_PATH="${OPENGROK_INSTANCE_BASE}/${LOGGER_CONFIG_FILE}"
    fi
    LOGGER_PROPERTIES="-Djava.util.logging.config.file=${LOGGER_CONFIG_PATH}"

    # REQUIRED: Java Archive of OpenGrok (Installation Location)
    OPENGROK_JAR="${OPENGROK_DISTRIBUTION_BASE}/opengrok.jar"

    # REQUIRED(deploy): Web Archive of OpenGrok (Distribution Location)
    #           (user building from source code will find this and other key
    #            files in the "dist" directory after the build is completed)
    OPENGROK_DIST_WAR="${OPENGROK_DISTRIBUTION_BASE}/source.war"

    # REQUIRED: Exuberant CTags (http://ctags.sf.net)
    EXUBERANT_CTAGS="${EXUBERANT_CTAGS:-`FindExuberantCTags`}"

    # OPTIONAL: supply extra command line options to CTags program
    if [ -n "${OPENGROK_CTAGS_OPTIONS_FILE}" ]; then
        CTAGS_OPTIONS_FILE="${OPENGROK_CTAGS_OPTIONS_FILE}"
    elif [ -r "${OPENGROK_INSTANCE_BASE}/etc/ctags.config" ]; then
        CTAGS_OPTIONS_FILE="${OPENGROK_INSTANCE_BASE}/etc/ctags.config"
    fi

    # REQUIRED: Java Home
    JAVA_HOME="${JAVA_HOME:-`FindJavaHome`}"
    export JAVA_HOME

    # REQUIRED: Java Virtual Machine
    JAVA="${JAVA:-$JAVA_HOME/bin/java}"

    # DEVELOPMENT: Debug option, if enabled current indexer will listen on the
    # port 8010 until a debugger connects
    #JAVA_DEBUG="-agentlib:jdwp=transport=dt_socket"
    #JAVA_DEBUG="$JAVA_DEBUG,server=y,address=8010,suspend=y"

    # OPTIONAL: Ignore these patterns as names of files or directories
    #IGNORE_PATTERNS="-i dummy"
    # To ignore skipping just the history cache creation for a particular
    # directory and all of it's subdirectories, touch an empty
    # .opengrok_skip_history file at the root of that directory

    # OPTIONAL: Enable Projects
    #           (Every directory in SRC_ROOT is considered a separate project)
    OPENGROK_ENABLE_PROJECTS="${OPENGROK_ENABLE_PROJECTS:-true}"
    case $OPENGROK_ENABLE_PROJECTS in
        true) ENABLE_PROJECTS="-P" ;;
        false) ENABLE_PROJECTS="" ;;
        *) ENABLE_PROJECTS="-P" ;;
    esac

    # OPTIONAL: Scanning Options (for Mercurial repositories)
    SCAN_FOR_REPOSITORY="-S"
    if [ -n "${OPENGROK_SCAN_REPOS}" ]
    then
        SCAN_FOR_REPOSITORY=""
    fi

    # OPTIONAL: Disable remote repository support (CVS or SVN) [on by default]
    GENERATE_HISTORY="-r on"
    if [ -n "${OPENGROK_GENERATE_HISTORY}" ]
    then
        GENERATE_HISTORY="-r ${OPENGROK_GENERATE_HISTORY}"
    fi

    if [ "$OPENGROK_GENERATE_HISTORY" != "off" ]
    then
        GENERATE_HISTORY="${GENERATE_HISTORY} -H"
    fi

    # OPTIONAL: override depth of scanning for repositories
    if [ -n "${OPENGROK_SCAN_DEPTH}" ]
    then
        SCAN_DEPTH="-z${OPENGROK_SCAN_DEPTH}"
    fi

    # OPTIONAL: Allow Leading Wildcard Searches
    #           (default: on)
    LEADING_WILDCARD="-a on"
    if [ -n "${OPENGROK_WPREFIX}" ]
    then
        LEADING_WILDCARD=""
    fi

    # OPTIONAL: Web Site Look & Feel
    #           (Options: default, offwhite and polished.
    #            Note the quoting requirements)
    #SKIN='-L default'

    # OPTIONAL: Configuration Address (host:port)
    #           (conf/web.xml default is localhost:2424)
    WEBAPP_CONFIG=""
    if [ -n "${OPENGROK_WEBAPP_CFGADDR}" ]; then
        WEBAPP_CONFIG_ADDRESS=${OPENGROK_WEBAPP_CFGADDR}
    if [ "${OPENGROK_WEBAPP_CFGADDR}" = "none" ]; then
        WEBAPP_CONFIG_ADDRESS=""
    fi
    else
        WEBAPP_CONFIG_ADDRESS="localhost:2424"
    fi

    if [ -n "${WEBAPP_CONFIG_ADDRESS}" ]; then
        WEBAPP_CONFIG="-U ${WEBAPP_CONFIG_ADDRESS}"
    fi

    # OPTIONAL: Context URL of the OpenGrok webapp
    #           (default is /source)
    WEBAPP_CONTEXT=""
    if [ -n "${OPENGROK_WEBAPP_CONTEXT}" ]; then
        WEBAPP_CONTEXT="-w ${OPENGROK_WEBAPP_CONTEXT}"
    fi

    # OPTIONAL: JVM Options
    JAVA_OPTS="${JAVA_OPTS:--Xmx2048m}"
    
    # OPTIONAL: Full Path to History Utilities
    HG="`Which hg`"
    CVS="`Which cvs`"
    SVN="`Which svn`"
    SCCS="`Which sccs`"
    CLEARCASE="`Which cleartool`"
    GIT="`Which git`"
    P4="`Which p4`"
    MTN="`Which mtn`"
    BZR="`Which bzr`"

    # OPTIONAL: Override Built-in Properties
    # Assumption: We should not set properties to the empty string
    PROPERTIES="\
${HG:+-Dorg.opensolaris.opengrok.history.Mercurial=$HG} \
${CVS:+-Dorg.opensolaris.opengrok.history.cvs=$CVS} \
${SVN:+-Dorg.opensolaris.opengrok.history.Subversion=$SVN} \
${SCCS:+-Dorg.opensolaris.opengrok.history.SCCS=$SCCS} \
${CLEARCASE:+-Dorg.opensolaris.opengrok.history.ClearCase=$CLEARCASE} \
${GIT:+-Dorg.opensolaris.opengrok.history.git=$GIT} \
${P4:+-Dorg.opensolaris.opengrok.history.Perforce=$P4} \
${MTN:+-Dorg.opensolaris.opengrok.history.Monotone=$MTN} \
${BZR:+-Dorg.opensolaris.opengrok.history.Bazaar=$BZR} \
"

    # OPTIONAL: Store The History Cache in Java DB (derby),
    #           instead of file system (in gzipped xml files).
    #
    # Requirements:
    #   - derbyclient.jar      - See README.txt for more details
    #   - Running Derby Server - Defaults to localhost:1527
    #
    if [ -n "${OPENGROK_DERBY}" ]
    then
        DERBY_OPTIONS="-D"
    if [ -n "${OPENGROK_DERBY_URL}" ]; then
        DERBY_OPTIONS="${DERBY_OPTIONS} -u ${OPENGROK_DERBY_URL}"
    fi
    fi

    # OPTIONAL: Show revision tags in History view.
    #        Turn this off if you want to increase indexing performance a bit
    #           (default: off)
    if [ -n "${OPENGROK_TAG}" ]
    then
        HISTORY_TAGS="-G"
    fi

    # DELIVERED: An update program for EftarFile
    # Usage: <class> inputFile [inputFile ...] outputFile
    # EftarFile == An Extremely Fast Tagged Attribute Read-only File System
    EFTAR_UPDATE="org.opensolaris.opengrok.web.EftarFile"

    # HARDCODED: Generated EftarFile (See web/*.jsp)
    EFTAR_OUTPUT_FILE="${DATA_ROOT}/index/dtags.eftar"

    # Be Quiet? (set indirectly by command line arguments in the main program)
    #QUIET=""

    # or alternatively, Be Verbose!
    #VERBOSE="-v"

    if [ -n "${OPENGROK_VERBOSE}" ]
    then
        VERBOSE="-v"
        QUIET=""
    fi

    if [ -n "${OPENGROK_PROGRESS}" ]
    then
        PROGRESS="-C"
    fi
